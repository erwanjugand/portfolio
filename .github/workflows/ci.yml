name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: ${{ github.ref_name == 'master' && 'prod' || github.ref_name == 'dev' && 'dev' || 'default' }}
    env:
      FONT_AWESOME_TOKEN: ${{ secrets.FONT_AWESOME_TOKEN }}

    steps:
      - name: Download project from git
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint:ci

      - name: Build
        run: yarn build
        env:
          SITE_URL: ${{ secrets.SITE_URL }}
          ROBOTS_DISALLOW_VALUE: ${{ secrets.ROBOTS_DISALLOW_VALUE }}
          RAPID_API_KEY: ${{ secrets.RAPID_API_KEY }}
          RAPID_API_HOST: ${{ secrets.RAPID_API_HOST }}
          CLOUDFLARE_ANALYTICS_TOKEN: ${{ secrets.CLOUDFLARE_ANALYTICS_TOKEN }}
          NITRO_PRESET: cloudflare

      - name: Cache output
        uses: actions/cache@v3
        with:
          path: .output
          key: nuxt-${{ github.sha }}

      - name: Cache wrangler
        uses: actions/cache@v3
        with:
          path: wrangler.toml
          key: nuxt-${{ github.sha }}

  deploy:
    if: |
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, '[skip-deploy]')
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Get output
        uses: actions/cache@v3
        with:
          path: .output
          key: nuxt-${{ github.sha }}

      - name: Get wrangler
        uses: actions/cache@v3
        with:
          path: wrangler.toml
          key: nuxt-${{ github.sha }}

      - name: Publish to Cloudflare
        if: ${{ !env.ACT }}
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: publish ${{ github.ref_name == 'master' && ' ' || '--env dev' }}
