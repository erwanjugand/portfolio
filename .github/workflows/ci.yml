name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

env:
  FONT_AWESOME_TOKEN: ${{ secrets.FONT_AWESOME_TOKEN }}

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Check
        run: yarn check:ci

  tests:
    runs-on: ubuntu-latest
    needs: checks

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cypress install
        run: yarn cypress install

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: yarn build
          start: yarn preview
          browser: chrome

      - name: Archive Cypress Screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Archive Cypress Videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

  build:
    if: |
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, '[skip-deploy]')
    runs-on: ubuntu-latest
    needs: checks

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build
        run: yarn build
        env:
          SITE_URL: ${{ secrets.SITE_URL }}
          ROBOTS_DISALLOW_VALUE: ${{ secrets.ROBOTS_DISALLOW_VALUE }}
          RAPID_API_KEY: ${{ secrets.RAPID_API_KEY }}
          RAPID_API_HOST: ${{ secrets.RAPID_API_HOST }}
          CLOUDFLARE_ANALYTICS_TOKEN: ${{ secrets.CLOUDFLARE_ANALYTICS_TOKEN }}
          NITRO_PRESET: cloudflare

      - name: Archive Build
        uses: actions/upload-artifact@v3
        with:
          name: nuxt-cloudflare-build
          path: .output

  deploy:
    if: |
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, '[skip-deploy]')
    runs-on: ubuntu-latest
    needs: [checks, tests, build]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: nuxt-cloudflare-build
          path: .output

      - name: Publish to Cloudflare
        if: ${{ !env.ACT }}
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy ${{ github.ref_name == 'master' && ' ' || '--env dev' }}
